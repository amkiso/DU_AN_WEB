#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DU_AN_WEB.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="MY_PROJECT")]
	public partial class QL_SANPHAMDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertDONHANG(DONHANG instance);
    partial void UpdateDONHANG(DONHANG instance);
    partial void DeleteDONHANG(DONHANG instance);
    partial void InsertUSER_DATA(USER_DATA instance);
    partial void UpdateUSER_DATA(USER_DATA instance);
    partial void DeleteUSER_DATA(USER_DATA instance);
    partial void InsertHOA_DON(HOA_DON instance);
    partial void UpdateHOA_DON(HOA_DON instance);
    partial void DeleteHOA_DON(HOA_DON instance);
    partial void InsertLOAISP(LOAISP instance);
    partial void UpdateLOAISP(LOAISP instance);
    partial void DeleteLOAISP(LOAISP instance);
    partial void InsertSANPHAM(SANPHAM instance);
    partial void UpdateSANPHAM(SANPHAM instance);
    partial void DeleteSANPHAM(SANPHAM instance);
        #endregion

        public QL_SANPHAMDataContext() :
                base(global::System.Configuration.ConfigurationManager.ConnectionStrings["MY_PROJECTConnectionString"].ConnectionString, mappingSource)
        {
            OnCreated();
        }
        public QL_SANPHAMDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_SANPHAMDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_SANPHAMDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public QL_SANPHAMDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<DONHANG> DONHANGs
		{
			get
			{
				return this.GetTable<DONHANG>();
			}
		}
		
		public System.Data.Linq.Table<USER_DATA> USER_DATAs
		{
			get
			{
				return this.GetTable<USER_DATA>();
			}
		}
		
		public System.Data.Linq.Table<HOA_DON> HOA_DONs
		{
			get
			{
				return this.GetTable<HOA_DON>();
			}
		}
		
		public System.Data.Linq.Table<LOAISP> LOAISPs
		{
			get
			{
				return this.GetTable<LOAISP>();
			}
		}
		
		public System.Data.Linq.Table<SANPHAM> SANPHAMs
		{
			get
			{
				return this.GetTable<SANPHAM>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DONHANG")]
	public partial class DONHANG : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_USER;
		
		private string _ID_DONHANG;
		
		private string _ID_SANPHAM;
		
		private EntitySet<HOA_DON> _HOA_DONs;
		
		private EntityRef<USER_DATA> _USER_DATA;
		
		private EntityRef<SANPHAM> _SANPHAM;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USERChanging(string value);
    partial void OnID_USERChanged();
    partial void OnID_DONHANGChanging(string value);
    partial void OnID_DONHANGChanged();
    partial void OnID_SANPHAMChanging(string value);
    partial void OnID_SANPHAMChanged();
    #endregion
		
		public DONHANG()
		{
			this._HOA_DONs = new EntitySet<HOA_DON>(new Action<HOA_DON>(this.attach_HOA_DONs), new Action<HOA_DON>(this.detach_HOA_DONs));
			this._USER_DATA = default(EntityRef<USER_DATA>);
			this._SANPHAM = default(EntityRef<SANPHAM>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					if (this._USER_DATA.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DONHANG", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_DONHANG
		{
			get
			{
				return this._ID_DONHANG;
			}
			set
			{
				if ((this._ID_DONHANG != value))
				{
					this.OnID_DONHANGChanging(value);
					this.SendPropertyChanging();
					this._ID_DONHANG = value;
					this.SendPropertyChanged("ID_DONHANG");
					this.OnID_DONHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SANPHAM", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_SANPHAM
		{
			get
			{
				return this._ID_SANPHAM;
			}
			set
			{
				if ((this._ID_SANPHAM != value))
				{
					if (this._SANPHAM.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_SANPHAMChanging(value);
					this.SendPropertyChanging();
					this._ID_SANPHAM = value;
					this.SendPropertyChanged("ID_SANPHAM");
					this.OnID_SANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_HOA_DON", Storage="_HOA_DONs", ThisKey="ID_DONHANG", OtherKey="ID_DONHANG")]
		public EntitySet<HOA_DON> HOA_DONs
		{
			get
			{
				return this._HOA_DONs;
			}
			set
			{
				this._HOA_DONs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_DATA_DONHANG", Storage="_USER_DATA", ThisKey="ID_USER", OtherKey="ID_USER", IsForeignKey=true)]
		public USER_DATA USER_DATA
		{
			get
			{
				return this._USER_DATA.Entity;
			}
			set
			{
				USER_DATA previousValue = this._USER_DATA.Entity;
				if (((previousValue != value) 
							|| (this._USER_DATA.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._USER_DATA.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._USER_DATA.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._ID_USER = value.ID_USER;
					}
					else
					{
						this._ID_USER = default(string);
					}
					this.SendPropertyChanged("USER_DATA");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DONHANG", Storage="_SANPHAM", ThisKey="ID_SANPHAM", OtherKey="ID_SANPHAM", IsForeignKey=true)]
		public SANPHAM SANPHAM
		{
			get
			{
				return this._SANPHAM.Entity;
			}
			set
			{
				SANPHAM previousValue = this._SANPHAM.Entity;
				if (((previousValue != value) 
							|| (this._SANPHAM.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SANPHAM.Entity = null;
						previousValue.DONHANGs.Remove(this);
					}
					this._SANPHAM.Entity = value;
					if ((value != null))
					{
						value.DONHANGs.Add(this);
						this._ID_SANPHAM = value.ID_SANPHAM;
					}
					else
					{
						this._ID_SANPHAM = default(string);
					}
					this.SendPropertyChanged("SANPHAM");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HOA_DONs(HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = this;
		}
		
		private void detach_HOA_DONs(HOA_DON entity)
		{
			this.SendPropertyChanging();
			entity.DONHANG = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.USER_DATA")]
	public partial class USER_DATA : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_USER;
		
		private string _NAME_USER;
		
		private string _USER_PASSWORD;
		
		private System.Nullable<System.DateTime> _DAY_CREATED;
		
		private string _USER_ADDRESS;
		
		private string _USER_TYPE;
		
		private string _USER_STATUS;
		
		private string _EMAIL;
		
		private string _PROFILE_PICTURE;
		
		private EntitySet<DONHANG> _DONHANGs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_USERChanging(string value);
    partial void OnID_USERChanged();
    partial void OnNAME_USERChanging(string value);
    partial void OnNAME_USERChanged();
    partial void OnUSER_PASSWORDChanging(string value);
    partial void OnUSER_PASSWORDChanged();
    partial void OnDAY_CREATEDChanging(System.Nullable<System.DateTime> value);
    partial void OnDAY_CREATEDChanged();
    partial void OnUSER_ADDRESSChanging(string value);
    partial void OnUSER_ADDRESSChanged();
    partial void OnUSER_TYPEChanging(string value);
    partial void OnUSER_TYPEChanged();
    partial void OnUSER_STATUSChanging(string value);
    partial void OnUSER_STATUSChanged();
    partial void OnEMAILChanging(string value);
    partial void OnEMAILChanged();
    partial void OnPROFILE_PICTUREChanging(string value);
    partial void OnPROFILE_PICTUREChanged();
    #endregion
		
		public USER_DATA()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_USER", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_USER
		{
			get
			{
				return this._ID_USER;
			}
			set
			{
				if ((this._ID_USER != value))
				{
					this.OnID_USERChanging(value);
					this.SendPropertyChanging();
					this._ID_USER = value;
					this.SendPropertyChanged("ID_USER");
					this.OnID_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NAME_USER", DbType="NChar(20) NOT NULL", CanBeNull=false)]
		public string NAME_USER
		{
			get
			{
				return this._NAME_USER;
			}
			set
			{
				if ((this._NAME_USER != value))
				{
					this.OnNAME_USERChanging(value);
					this.SendPropertyChanging();
					this._NAME_USER = value;
					this.SendPropertyChanged("NAME_USER");
					this.OnNAME_USERChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_PASSWORD", DbType="Char(64) NOT NULL", CanBeNull=false)]
		public string USER_PASSWORD
		{
			get
			{
				return this._USER_PASSWORD;
			}
			set
			{
				if ((this._USER_PASSWORD != value))
				{
					this.OnUSER_PASSWORDChanging(value);
					this.SendPropertyChanging();
					this._USER_PASSWORD = value;
					this.SendPropertyChanged("USER_PASSWORD");
					this.OnUSER_PASSWORDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAY_CREATED", DbType="Date")]
		public System.Nullable<System.DateTime> DAY_CREATED
		{
			get
			{
				return this._DAY_CREATED;
			}
			set
			{
				if ((this._DAY_CREATED != value))
				{
					this.OnDAY_CREATEDChanging(value);
					this.SendPropertyChanging();
					this._DAY_CREATED = value;
					this.SendPropertyChanged("DAY_CREATED");
					this.OnDAY_CREATEDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_ADDRESS", DbType="NChar(50)")]
		public string USER_ADDRESS
		{
			get
			{
				return this._USER_ADDRESS;
			}
			set
			{
				if ((this._USER_ADDRESS != value))
				{
					this.OnUSER_ADDRESSChanging(value);
					this.SendPropertyChanging();
					this._USER_ADDRESS = value;
					this.SendPropertyChanged("USER_ADDRESS");
					this.OnUSER_ADDRESSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_TYPE", DbType="Char(20)")]
		public string USER_TYPE
		{
			get
			{
				return this._USER_TYPE;
			}
			set
			{
				if ((this._USER_TYPE != value))
				{
					this.OnUSER_TYPEChanging(value);
					this.SendPropertyChanging();
					this._USER_TYPE = value;
					this.SendPropertyChanged("USER_TYPE");
					this.OnUSER_TYPEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_USER_STATUS", DbType="Char(20)")]
		public string USER_STATUS
		{
			get
			{
				return this._USER_STATUS;
			}
			set
			{
				if ((this._USER_STATUS != value))
				{
					this.OnUSER_STATUSChanging(value);
					this.SendPropertyChanging();
					this._USER_STATUS = value;
					this.SendPropertyChanged("USER_STATUS");
					this.OnUSER_STATUSChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EMAIL", DbType="Char(50)")]
		public string EMAIL
		{
			get
			{
				return this._EMAIL;
			}
			set
			{
				if ((this._EMAIL != value))
				{
					this.OnEMAILChanging(value);
					this.SendPropertyChanging();
					this._EMAIL = value;
					this.SendPropertyChanged("EMAIL");
					this.OnEMAILChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PROFILE_PICTURE", DbType="Char(50)")]
		public string PROFILE_PICTURE
		{
			get
			{
				return this._PROFILE_PICTURE;
			}
			set
			{
				if ((this._PROFILE_PICTURE != value))
				{
					this.OnPROFILE_PICTUREChanging(value);
					this.SendPropertyChanging();
					this._PROFILE_PICTURE = value;
					this.SendPropertyChanged("PROFILE_PICTURE");
					this.OnPROFILE_PICTUREChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="USER_DATA_DONHANG", Storage="_DONHANGs", ThisKey="ID_USER", OtherKey="ID_USER")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.USER_DATA = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.USER_DATA = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HOA_DON")]
	public partial class HOA_DON : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_DONHANG;
		
		private string _PT_THANHTOAN;
		
		private System.Nullable<System.DateTime> _DAYCREATE;
		
		private string _ID_HOADON;
		
		private EntityRef<DONHANG> _DONHANG;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_DONHANGChanging(string value);
    partial void OnID_DONHANGChanged();
    partial void OnPT_THANHTOANChanging(string value);
    partial void OnPT_THANHTOANChanged();
    partial void OnDAYCREATEChanging(System.Nullable<System.DateTime> value);
    partial void OnDAYCREATEChanged();
    partial void OnID_HOADONChanging(string value);
    partial void OnID_HOADONChanged();
    #endregion
		
		public HOA_DON()
		{
			this._DONHANG = default(EntityRef<DONHANG>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_DONHANG", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_DONHANG
		{
			get
			{
				return this._ID_DONHANG;
			}
			set
			{
				if ((this._ID_DONHANG != value))
				{
					if (this._DONHANG.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_DONHANGChanging(value);
					this.SendPropertyChanging();
					this._ID_DONHANG = value;
					this.SendPropertyChanged("ID_DONHANG");
					this.OnID_DONHANGChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PT_THANHTOAN", DbType="NChar(50)")]
		public string PT_THANHTOAN
		{
			get
			{
				return this._PT_THANHTOAN;
			}
			set
			{
				if ((this._PT_THANHTOAN != value))
				{
					this.OnPT_THANHTOANChanging(value);
					this.SendPropertyChanging();
					this._PT_THANHTOAN = value;
					this.SendPropertyChanged("PT_THANHTOAN");
					this.OnPT_THANHTOANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DAYCREATE", DbType="Date")]
		public System.Nullable<System.DateTime> DAYCREATE
		{
			get
			{
				return this._DAYCREATE;
			}
			set
			{
				if ((this._DAYCREATE != value))
				{
					this.OnDAYCREATEChanging(value);
					this.SendPropertyChanging();
					this._DAYCREATE = value;
					this.SendPropertyChanged("DAYCREATE");
					this.OnDAYCREATEChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_HOADON", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_HOADON
		{
			get
			{
				return this._ID_HOADON;
			}
			set
			{
				if ((this._ID_HOADON != value))
				{
					this.OnID_HOADONChanging(value);
					this.SendPropertyChanging();
					this._ID_HOADON = value;
					this.SendPropertyChanged("ID_HOADON");
					this.OnID_HOADONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DONHANG_HOA_DON", Storage="_DONHANG", ThisKey="ID_DONHANG", OtherKey="ID_DONHANG", IsForeignKey=true)]
		public DONHANG DONHANG
		{
			get
			{
				return this._DONHANG.Entity;
			}
			set
			{
				DONHANG previousValue = this._DONHANG.Entity;
				if (((previousValue != value) 
							|| (this._DONHANG.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DONHANG.Entity = null;
						previousValue.HOA_DONs.Remove(this);
					}
					this._DONHANG.Entity = value;
					if ((value != null))
					{
						value.HOA_DONs.Add(this);
						this._ID_DONHANG = value.ID_DONHANG;
					}
					else
					{
						this._ID_DONHANG = default(string);
					}
					this.SendPropertyChanged("DONHANG");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LOAISP")]
	public partial class LOAISP : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_LOAI;
		
		private string _TENLOAI;
		
		private EntitySet<SANPHAM> _SANPHAMs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    partial void OnTENLOAIChanging(string value);
    partial void OnTENLOAIChanged();
    #endregion
		
		public LOAISP()
		{
			this._SANPHAMs = new EntitySet<SANPHAM>(new Action<SANPHAM>(this.attach_SANPHAMs), new Action<SANPHAM>(this.detach_SANPHAMs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENLOAI", DbType="NChar(50)")]
		public string TENLOAI
		{
			get
			{
				return this._TENLOAI;
			}
			set
			{
				if ((this._TENLOAI != value))
				{
					this.OnTENLOAIChanging(value);
					this.SendPropertyChanging();
					this._TENLOAI = value;
					this.SendPropertyChanged("TENLOAI");
					this.OnTENLOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM", Storage="_SANPHAMs", ThisKey="ID_LOAI", OtherKey="ID_LOAI")]
		public EntitySet<SANPHAM> SANPHAMs
		{
			get
			{
				return this._SANPHAMs;
			}
			set
			{
				this._SANPHAMs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = this;
		}
		
		private void detach_SANPHAMs(SANPHAM entity)
		{
			this.SendPropertyChanging();
			entity.LOAISP = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SANPHAM")]
	public partial class SANPHAM : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _ID_SANPHAM;
		
		private string _TENSP;
		
		private string _MOTA;
		
		private string _HINHANH;
		
		private string _ID_LOAI;
		
		private System.Nullable<double> _GIA_BAN;
		
		private System.Nullable<int> _SL_TON;
		
		private string _XUAT_XU;
		
		private EntitySet<DONHANG> _DONHANGs;
		
		private EntityRef<LOAISP> _LOAISP;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnID_SANPHAMChanging(string value);
    partial void OnID_SANPHAMChanged();
    partial void OnTENSPChanging(string value);
    partial void OnTENSPChanged();
    partial void OnMOTAChanging(string value);
    partial void OnMOTAChanged();
    partial void OnHINHANHChanging(string value);
    partial void OnHINHANHChanged();
    partial void OnID_LOAIChanging(string value);
    partial void OnID_LOAIChanged();
    partial void OnGIA_BANChanging(System.Nullable<double> value);
    partial void OnGIA_BANChanged();
    partial void OnSL_TONChanging(System.Nullable<int> value);
    partial void OnSL_TONChanged();
    partial void OnXUAT_XUChanging(string value);
    partial void OnXUAT_XUChanged();
    #endregion
		
		public SANPHAM()
		{
			this._DONHANGs = new EntitySet<DONHANG>(new Action<DONHANG>(this.attach_DONHANGs), new Action<DONHANG>(this.detach_DONHANGs));
			this._LOAISP = default(EntityRef<LOAISP>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_SANPHAM", DbType="Char(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string ID_SANPHAM
		{
			get
			{
				return this._ID_SANPHAM;
			}
			set
			{
				if ((this._ID_SANPHAM != value))
				{
					this.OnID_SANPHAMChanging(value);
					this.SendPropertyChanging();
					this._ID_SANPHAM = value;
					this.SendPropertyChanged("ID_SANPHAM");
					this.OnID_SANPHAMChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TENSP", DbType="NChar(50)")]
		public string TENSP
		{
			get
			{
				return this._TENSP;
			}
			set
			{
				if ((this._TENSP != value))
				{
					this.OnTENSPChanging(value);
					this.SendPropertyChanging();
					this._TENSP = value;
					this.SendPropertyChanged("TENSP");
					this.OnTENSPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_MOTA", DbType="NChar(300)")]
		public string MOTA
		{
			get
			{
				return this._MOTA;
			}
			set
			{
				if ((this._MOTA != value))
				{
					this.OnMOTAChanging(value);
					this.SendPropertyChanging();
					this._MOTA = value;
					this.SendPropertyChanged("MOTA");
					this.OnMOTAChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_HINHANH", DbType="Char(50)")]
		public string HINHANH
		{
			get
			{
				return this._HINHANH;
			}
			set
			{
				if ((this._HINHANH != value))
				{
					this.OnHINHANHChanging(value);
					this.SendPropertyChanging();
					this._HINHANH = value;
					this.SendPropertyChanged("HINHANH");
					this.OnHINHANHChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ID_LOAI", DbType="Char(10) NOT NULL", CanBeNull=false)]
		public string ID_LOAI
		{
			get
			{
				return this._ID_LOAI;
			}
			set
			{
				if ((this._ID_LOAI != value))
				{
					if (this._LOAISP.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnID_LOAIChanging(value);
					this.SendPropertyChanging();
					this._ID_LOAI = value;
					this.SendPropertyChanged("ID_LOAI");
					this.OnID_LOAIChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GIA_BAN", DbType="Float")]
		public System.Nullable<double> GIA_BAN
		{
			get
			{
				return this._GIA_BAN;
			}
			set
			{
				if ((this._GIA_BAN != value))
				{
					this.OnGIA_BANChanging(value);
					this.SendPropertyChanging();
					this._GIA_BAN = value;
					this.SendPropertyChanged("GIA_BAN");
					this.OnGIA_BANChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_SL_TON", DbType="Int")]
		public System.Nullable<int> SL_TON
		{
			get
			{
				return this._SL_TON;
			}
			set
			{
				if ((this._SL_TON != value))
				{
					this.OnSL_TONChanging(value);
					this.SendPropertyChanging();
					this._SL_TON = value;
					this.SendPropertyChanged("SL_TON");
					this.OnSL_TONChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_XUAT_XU", DbType="NChar(50)")]
		public string XUAT_XU
		{
			get
			{
				return this._XUAT_XU;
			}
			set
			{
				if ((this._XUAT_XU != value))
				{
					this.OnXUAT_XUChanging(value);
					this.SendPropertyChanging();
					this._XUAT_XU = value;
					this.SendPropertyChanged("XUAT_XU");
					this.OnXUAT_XUChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SANPHAM_DONHANG", Storage="_DONHANGs", ThisKey="ID_SANPHAM", OtherKey="ID_SANPHAM")]
		public EntitySet<DONHANG> DONHANGs
		{
			get
			{
				return this._DONHANGs;
			}
			set
			{
				this._DONHANGs.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LOAISP_SANPHAM", Storage="_LOAISP", ThisKey="ID_LOAI", OtherKey="ID_LOAI", IsForeignKey=true)]
		public LOAISP LOAISP
		{
			get
			{
				return this._LOAISP.Entity;
			}
			set
			{
				LOAISP previousValue = this._LOAISP.Entity;
				if (((previousValue != value) 
							|| (this._LOAISP.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LOAISP.Entity = null;
						previousValue.SANPHAMs.Remove(this);
					}
					this._LOAISP.Entity = value;
					if ((value != null))
					{
						value.SANPHAMs.Add(this);
						this._ID_LOAI = value.ID_LOAI;
					}
					else
					{
						this._ID_LOAI = default(string);
					}
					this.SendPropertyChanged("LOAISP");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = this;
		}
		
		private void detach_DONHANGs(DONHANG entity)
		{
			this.SendPropertyChanging();
			entity.SANPHAM = null;
		}
	}
}
#pragma warning restore 1591
